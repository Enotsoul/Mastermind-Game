/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * pnlMasterMindGame.java
 *
 * Created on 11-Mar-2011, 12:36:36
 */

package mastermind.panels;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import mastermind.controls.MasterMindRow;
import mastermind.controls.ZwartWitRow;
import mastermind.logic.MasterMindGame;
/**
 *
 * @author lostone
 */
public class PnlMasterMindGame extends JPanel {

    private ArrayList<ZwartWitRow> zwr = new ArrayList<ZwartWitRow>() ;
    private ArrayList<MasterMindRow> mmr = new ArrayList<MasterMindRow>();
    private int currentRow = 0;
    private MasterMindGame mmg = new MasterMindGame();
    
    /** Creates new form pnlMasterMindGame */
    public PnlMasterMindGame() {
        initComponents();
          this.setBackground(new Color(255,255,255,0));
          initRows();
          initGame();
    }
    
    private void initRows() {

        for (int i = 0; i < 10; i++) {
            MasterMindRow m = new MasterMindRow();
            ZwartWitRow z = new ZwartWitRow();

            m.setBounds(10,50*i+10,200,50);
            m.setName("mmr"+i);
            jLayeredPane1.add(m,javax.swing.JLayeredPane.DEFAULT_LAYER);
            
            z.setBounds(230,50*i+16,46,46);
            z.setName("zwr"+i);
            jLayeredPane1.add(z,javax.swing.JLayeredPane.DEFAULT_LAYER);

            mmr.add(m);
            zwr.add(z);
        }
     
    }

    //init the game for a new game
    public void initGame() {
       currentRow = 0;
       btnCheck.setEnabled(true);
       mmg.newGuess();
       System.out.println(mmg.getToGuess());
      

        for (int i = 0; i < 10; i++) {
            mmr.get(i).setColors("1111");
            zwr.get(i).setAllNotVisible();
            mmr.get(i).setVisible(false);
            zwr.get(i).setVisible(true);
            mmr.get(i).setEnabled(true);
        }
       
        btnCheck.setLocation(btnCheck.getX(),10);
 
        jLayeredPane1.validate();
        jLayeredPane1.repaint();
        this.validate();
        this.repaint();

        jLayeredPane1.updateUI();
       this.updateUI();
       mmr.get(currentRow).setVisible(true);
    }

    private void checkAnswer() {
      String pins = mmg.returnPins(mmr.get(currentRow).getColors());
      zwr.get(currentRow).setKleuren(pins);
      mmr.get(currentRow).setEnabled(false);/*
     if (currentRow>1) {
         zwr.get(currentRow-1).setAllNotVisible();
      }*/
      //end game.. ask if player wants to play again, if not go back to main..
      if (pins.equals("zzzz")) {
         /*int answer = JOptionPane.showConfirmDialog(null, "Congratulations! You found the right combination. Do you want to play again?",
                   "Game finished!",JOptionPane.YES_NO_OPTION);

         if (answer == JOptionPane.YES_OPTION) {
             System.out.println("clicked yes:)");
            initGame();
         } else {
             //fireRequestEvent(new RequestEvent(this, "show:main"));
             System.out.println("send to main");
         }*/
          JOptionPane.showMessageDialog(null, "Congratulations! You found the right combination!");
          btnCheck.setEnabled(false);
      } else {
        if (currentRow >= 9) {
             JOptionPane.showMessageDialog(null, "Oops, you tried all 10 rows.. and didn't find it");
             mmr.get(currentRow).setEnabled(false);
             btnCheck.setEnabled(false);
        } else {
              //place the button & the new row
              currentRow += 1;
              btnCheck.setVisible(false);
              btnCheck.setLocation(btnCheck.getX(),btnCheck.getY()+50);
              btnCheck.setVisible(true);
              mmr.get(currentRow).setVisible(true);
            }
        }
        //invalidation
      btnCheck.invalidate();
      for (int i = 0; i < 10; i++)
      {
            mmr.get(i).invalidate();
            zwr.get(i).invalidate();
      }/*
      jLayeredPane1.setVisible(false);
      jLayeredPane1.invalidate();
      jLayeredPane1.validate();
      jLayeredPane1.repaint();
      jLayeredPane1.setVisible(true);
      this.invalidate();
      this.validate();
      this.repaint();
      jLayeredPane1.updateUI();
       this.updateUI();*/
      this.setBackground(new Color(255,255,255,0));
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        btnCheck = new javax.swing.JButton();

        setName("Form"); // NOI18N

        jLayeredPane1.setName("jLayeredPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mastermind.MasterMindApp.class).getContext().getResourceMap(PnlMasterMindGame.class);
        btnCheck.setText(resourceMap.getString("btnCheck.text")); // NOI18N
        btnCheck.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        btnCheck.setName("btnCheck"); // NOI18N
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });
        btnCheck.setBounds(270, 10, 50, 40);
        jLayeredPane1.add(btnCheck, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO check current row
        checkAnswer();
    }//GEN-LAST:event_btnCheckActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JLayeredPane jLayeredPane1;
    // End of variables declaration//GEN-END:variables

    public void showSolution() {
        mmr.get(currentRow).setEnabled(false);
        btnCheck.setEnabled(false);
        mmr.get(currentRow).setColors(mmg.getToGuess());
    }

    public void showColorChooser() {
        String kleuren = JOptionPane.showInputDialog("Geef het aantal kleuren (2 tot 6):");
        if(functions.Math.isIntNumber(kleuren))
        {
            int iKleuren = Integer.parseInt(kleuren);
            if(iKleuren <=6 && iKleuren >= 2)
            {
                mmg.setMax(iKleuren);
                mmg.newGuess();
                initGame();
                for (int i = 0; i < 10; i++)
                {
                    mmr.get(i).setAmountOfColors(iKleuren);
                }
                return;
            }
        }
        JOptionPane.showMessageDialog(null, "Enkel een numerieke waarde tussen 2 en 6 toegestaan!");
    }



}
